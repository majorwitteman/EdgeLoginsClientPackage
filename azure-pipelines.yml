# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

steps:
- task: UniversalPackages@0
  inputs:
    command: 'download'
    downloadDirectory: '$(Build.StagingDirectory)'
    feedsToUse: 'internal'
    vstsFeed: '7f4600e8-b910-41b9-a1cb-17f4d6e1fe1a/94117e83-c7a8-4e16-bb4a-e3272e2bdcc8'
    vstsFeedPackage: '1c0f1116-3581-4ada-bf69-f57b1f198799'
    vstsPackageVersion: '1.8.4'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: | 
      mkdir $(Build.StagingDirectory)\Package
      Start-Process -FilePath $(Build.StagingDirectory)\IntuneWinAppUtil.exe -ArgumentList "-c $(System.DefaultWorkingDirectory)\src -s Install.ps1 -o $(Build.StagingDirectory)\Package" -Wait -NoNewWindow
      Rename-Item $(Build.StagingDirectory)\Package\Install.intunewin EdgeLoginsClientPackage.intunewin
      dir $(Build.StagingDirectory)\Package

- task: UniversalPackages@0
  inputs:
    command: 'publish'
    publishDirectory: '$(Build.StagingDirectory)\Package'
    vstsFeedPackagePublish: 'edge-logins-client-package'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: '7f4600e8-b910-41b9-a1cb-17f4d6e1fe1a/94117e83-c7a8-4e16-bb4a-e3272e2bdcc8'
    versionOption: 'patch'
    publishedPackageVar: 'PackageOutput'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Ouput $(PackageOutput)